openapi: 3.0.0
info:
  title: PluServer API
  description: API to manage Users and Transactions.
  version: 0.0.0
servers:
  - url: https://localhost:8080/api
tags:
  - name: user
    description: Operations about users
  - name: transaction
    description: Operations about transactions
paths:
  /users:
    get:
      tags:
        - user
      summary: Get all users
      description: Get all users
      operationId: GetAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a new user
      operationId: CreateUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /users/{username}:
    get:
      tags:
        - user
      summary: Get an existing user
      description: Get an user by username
      operationId: GetUser
      parameters:
        - name: username
          in: path
          description: Username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
    delete:
      tags:
        - user
      summary: Delete an existing user
      description: Delete an user by username
      operationId: DeleteUser
      parameters:
        - name: username
          in: path
          description: Username of a user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
    patch:
      tags:
        - user
      summary: Update an existing user
      description: Update an user by username
      operationId: UpdateUser
      parameters:
        - name: username
          in: path
          description: Username of a user
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception

  /transactions:
    get:
      tags:
        - transaction
      summary: Get all transactions
      description: Get all transactions
      operationId: GetAllTransactions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /transactions/{id}:
    get:
      tags:
        - transaction
      summary: Get an existing transaction
      description: Get a transaction by id
      operationId: GetTransaction
      parameters:
        - name: id
          in: path
          description: id of a transaction
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
    delete:
      tags:
        - transaction
      summary: Delete an existing transaction
      description: Delete a transaction by id
      operationId: DeleteTransaction
      parameters:
        - name: id
          in: path
          description: id of a transaction
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
    patch:
      tags:
        - transaction
      summary: Update an existing transaction
      description: Update a transaction by id
      operationId: UpdateTransaction
      parameters:
        - name: id
          in: path
          description: id of a transaction
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
  /transactions/withdraw:
    post:
      tags:
        - transaction
      summary: Create withdraw transaction
      description: Add a new withdraw transaction
      operationId: CreateWithdraw
      requestBody:
        description: Create a new withdraw transaction in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /transactions/deposit:
    post:
      tags:
        - transaction
      summary: Create deposit transaction
      description: Add a new deposit transaction
      operationId: CreateDeposit
      requestBody:
        description: Create a new deposit transaction in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /transactions/transfer:
    post:
      tags:
        - transaction
      summary: Transfer transaction
      description: Add a new transfer transaction
      operationId: CreateTransfer
      requestBody:
        description: Create a new transfer transaction in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '422':
          description: Validation exception

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: user_name
        phone:
          type: string
          example: +21000000000
        name:
          type: string
          example: my name
        country:
          type: string
          example: country
        age:
          type: integer
          example: 20
        account:
          type: object
          items:
            $ref: '#/components/schemas/Account'
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: uint
          example: 10
        origin-account-id:
          type: integer
          format: int64
          example: 10
        destination-account-id:
          type: integer
          format: int64
          example: 10
        created-at:
          type: integer
          format: date-time
        updated-at:
          type: integer
          format: date-time
        deleted-at:
          type: integer
          format: date-time
        amount:
          type: number
          format: float32
          example: 10
        type:
          type: string
          description: Transaction Type
          example: transfer
          enum:
            - transfer
            - withdraw
            - deposit
        origin-account:
          type: object
          items:
            $ref: '#/components/schemas/Account'
        destination-account:
          type: object
          items:
            $ref: '#/components/schemas/Account'
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 198772
        balance:
          type: number
          format: float32
          example: 7.0
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'